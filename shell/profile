# vim:ft=zsh

:d() {
    eval "$(direnv hook zsh)"
}

:r() {
    direnv reload
}

:p() {
    export PATH="$(nix-instantiate --eval -E "with import <nixpkgs> {}; lib.makeBinPath [ $* ]" | jq -r .):$PATH"
    IN_NIX_SHELL=direnv
    name+="${name:+ }$*"
}

:u() {
   local i
   local -a refs
   for i in "${@}"; do
       if [[ ! "$i" =~ "(:|#)" ]]; then
           i="flake:lnl#darwinPackages.$i"
       fi
       refs+=("$i")
   done
   eval "$(direnv apply_dump <(nix shell "${refs[@]}" -c direnv dump))"
   name+="${name:+ }$*"
   IN_NIX_SHELL=direnv
   typeset -U PATH
}

z() {
    local dir

    dir=$(find ~/Code -maxdepth 3 -name '.git' | sed 's/\/.git$//' | fzf --preview-window right:50% --preview 'git -C {} log --pretty=color --color=always -16')
    cd "$dir"
    if [ -f "$dir/.default-pwd" ]; then
        cd "$(< .default-pwd)"
    fi
}

fzf-store() {
    find /nix/store -type d -mindepth 1 -maxdepth 1 | fzf -m --preview-window right:50% --preview 'nix-store -q --tree {}'
}

xi() {
    curl -F 'f:1=<-' ix.io
}

vat() {
    TERM=vt100 nvim -R "$@" "+setl updatetime=0" "+autocmd CursorHold * :q"
}

nixq() {
    nix eval --json "(
    with builtins;
    with import <nixpkgs/lib>;
    let
      _ = fromJSON (readFile /dev/stdin);
      _0 = head _;
      _1 = head _0;
      _2 = head _1;
    in
    $*
    )"
}

nix-unpack() {
    nix-shell --run 'phases=unpackPhase genericBuild' "$@"
}

gh-darwin-debug() {
    curl -X POST -fsSL \
        -H "Accept: application/vnd.github.everest-preview+json" \
        -H "Authorization: token $GITHUB_TOKEN" \
        --data '{"event_type": "debug"}' \
        https://api.github.com/repos/LnL7/nix-darwin/dispatches
}

pushover() {
    local i
    "$@"
    i=$?
    curl -fsSL -XPOST \
        --form-string "token=$PUSHOVER_TOKEN" \
        --form-string "user=$PUSHOVER_USER" \
        --form-string "expire=60" \
        --form-string "sound=intermission" \
        --form-string "message=$*: completed with status $i" \
        https://api.pushover.net/1/messages.json > /dev/null
    return "$i"
}
