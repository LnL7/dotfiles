[include]
  path = .gitconfig.local

[color]
  ui = auto

[core]
  excludesfile = ~/.gitignore
  autocrlf     = input

[merge]
  ; ff   = only
  tool = splice

[mergetool "splice"]
  cmd           = "vim -f $BASE $LOCAL $REMOTE $MERGED -c 'SpliceInit'"
  trustExitCode = true

[pager]
  reflog = false
  diff   = false
  log    = false

[pretty]
  colored = format:%C(yellow)%h%Cblue%d%Creset %s %C(white)  %an, %ar%Creset\n

; [remote "origin"]
;   fetch = +refs/heads/*:refs/remotes/upstream/*
;   fetch = +refs/pull/*/head:refs/pull/upstream/*

[alias]
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git remote prune origin && git branch -D $1' -
  lsch          = "!f() { git diff --name-status -r "HEAD~$1"; }; f"
  merge-branch  = !git checkout master && git merge @{-1}
  trash         = !mkdir -p .Trashes && git ls-files --others --exclude-standard | xargs mv -f -t .Trashes
  up            = !git fetch origin && git rebase origin/master

[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
