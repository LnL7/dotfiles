# vim:ft=zsh
# This file is read for login shells.

alias g='git log --pretty=color -32'
alias ga='git log --pretty=color --all'
alias gb='git branch'
alias gc='git checkout'
alias gcb='git checkout -B'
alias gd='git diff --minimal --patch'
alias gf='git fetch'
alias gg='git log --pretty=color --graph'
alias gl='git log --pretty=nocolor'
alias grh='git reset --hard'
alias l='ls -lh'


:d() {
    eval "$(direnv hook zsh)"
}

:r() {
    direnv reload
}

:p() {
    export PATH="$(nix-instantiate --eval -E "with import <nixpkgs> {}; lib.makeBinPath [ $* ]" | jq -r .):$PATH"
    IN_NIX_SHELL=direnv
    name+="${name:+ }$*"
}

:u() {
   local i
   local -a refs
   for i in "${@}"; do
       if [[ ! "$i" =~ "(:|#)" ]]; then
           i="flake:lnl#darwinPackages.$i"
       fi
       refs+=("$i")
   done
   eval "$(direnv apply_dump <(nix shell "${refs[@]}" -c direnv dump))"
   name+="${name:+ }$*"
   IN_NIX_SHELL=direnv
   typeset -U PATH
}

z() {
    local dir

    dir=$(find ~/Code -maxdepth 3 -name '.git' | sed 's/\/.git$//' | fzf --preview-window right:50% --preview 'git -C {} log --pretty=color --color=always -16')
    cd "$dir"
    if [ -f "$dir/.default-pwd" ]; then
        cd "$(< .default-pwd)"
    fi
}

vat() {
    TERM=vt100 nvim -R "$@" "+setl updatetime=0" "+autocmd CursorHold * :q"
}

nix-unpack() {
    nix-shell --run 'phases=unpackPhase genericBuild' "$@"
}

pushover() {
    local i
    "$@"
    i=$?
    curl -fsSL -XPOST \
        --form-string "token=$PUSHOVER_TOKEN" \
        --form-string "user=$PUSHOVER_USER" \
        --form-string "expire=60" \
        --form-string "sound=intermission" \
        --form-string "message=$*: completed with status $i" \
        https://api.pushover.net/1/messages.json > /dev/null
    return "$i"
}


reexec() {
    exec $SHELL -c 'echo >&2 "reexecuting shell: $SHELL" && exec $SHELL -l'
}

reexec-tmux() {
    exec tmux new-session -A -s _ "$@"
}

reexec-sandbox() {
    export IN_NIX_SANDBOX=1
    exec /usr/bin/sandbox-exec -f /etc/nix/user-sandbox.sb $SHELL -l
}

vi-sandbox() {
    export IN_NIX_SANDBOX=1
    /usr/bin/sandbox-exec -f /etc/nix/editor-sandbox.sb vi "$@"
}

zsh-sandbox() {
    export IN_NIX_SANDBOX=1
    /usr/bin/sandbox-exec -f /etc/nix/user-sandbox.sb zsh -l
}

nix() {
    command nix --option experimental-features "flakes nix-command" "$@"
}

ls() {
    command ls --color=auto "$@"
}
