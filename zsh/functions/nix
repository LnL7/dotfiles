
xnix-description () {
  xargs nix-env --description -qaA "$@"
}

xnix-drv () {
  xargs nix-env --drv-path -qaA "$@" | jq .
}

xnix-out () {
  xargs nix-env --out-path -qaA "$@" | jq .
}

xnix-install () {
  xargs nix-env -iA "$@"
}

nix-shell-default () {
  local expr='
  { nixpkgs ? import <nixpkgs> {} }:
  nixpkgs.callPackage ./. {}
  '
  nix-shell --run zsh -E "${expr}" "$@"
}

nix-shell-ghc () {
  local expr='
  { nixpkgs ? import <nixpkgs> {}, compiler ? "ghc7101" }:
  (nixpkgs.pkgs.haskell.packages.${compiler}.callPackage ./. {}).env
  '
  nix-shell --run zsh -E "${expr}" "$@"
}

nix-shell-ghc-with () {
  nix-shell --run zsh -p "haskellPackages.ghcWithPackages (p: with p; [ $@ ])"
}

# vim:set ft=zsh:
