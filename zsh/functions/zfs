# vim:set ft=sh:

z () {
  case "$1" in
    st|status)       shift && __zfs_status "$@" ;;
    fs|pools)        shift && __zfs_pools "$@" ;;
    ls|filesystems)  shift && __zfs_filesystems "" "$@" ;;
    sn|snapshots)    shift && __zfs_snapshots "" "$@" ;;
    rm|destroy)      shift && __zfs_destroy "$@" ;;
    cd)              shift && __zfs_cd "$@" ;;
    mount)           shift && __zfs_mount "$@" ;;
    umount|unmount)  shift && __zfs_unmount "$@" ;;
    offline)         shift && __zfs_offline "$@" ;;
    online)          shift && __zfs_online "$@" ;;
    -h) type -f "$0" ;;
    *)  false ;;
  esac
}

__zfs_status () {
  ( sudo zpool status "$@" ) || return
}

__zfs_pools () {
  ( sudo zpool list "$@" ) || return
}

__zfs_filesystems () {
  ( sudo zfs list $(__zfs_list_options "$1") -r "${@:2}" ) || return
}

__zfs_snapshots () {
  ( sudo zfs list -t snapshot $(__zfs_list_options "$1") -r "${@:2}" ) || return
}

__zfs_destroy () {
  __zfs_filesystems "" -t snapshot "$@" | fzf --prompt='zfs destroy> ' --header-lines=1 -m | awk '{print $1}' | xargs -n1 -p sudo zfs destroy || return
}

__zfs_cd () {
  local filesystem
  filesystem=$(__zfs_filesystems "canmount,mounted" "$@" | sed '/       off/d' | fzf --header-lines=1 +m | awk '{print $1}') || return
  case "$(__zfs_get mounted "$filesystem")" in
    'no') ( sudo zfs mount "$filesystem" ) || return ;;
  esac
  cd "$(__zfs_get mountpoint "$filesystem")" || return
}

__zfs_mount () {
  local filesystems
  filesystems=$(__zfs_filesystems "canmount,mounted" "$@" | sed '/       off/d' | fzf --header-lines=1 -m | awk '{print $1}') || return
  for filesystem in "${(f)filesystems}"; do
    case "$(__zfs_get mounted "$filesystem")" in
      no) ( sudo zfs mount "$filesystem" ) || return ;;
      *)  echo "skipping $filesystem..." >&2 || return ;;
    esac
  done
}

__zfs_unmount () {
  local filesystems
  filesystems=$(__zfs_filesystems "canmount,mounted" "$@" | sed '/       off/d' | fzf --header-lines=1 -m | awk '{print $1}') || return
  for filesystem in "${(f)filesystems}"; do
    case "$(__zfs_get mounted "$filesystem")" in
      yes) ( sudo zfs unmount "$filesystem" ) || return ;;
      *)   echo "skipping $filesystem..." >&2 || return ;;
    esac
  done
}

__zfs_online () {
  local disk
  disk=$(sudo zpool status "$@" | fzf -m | awk '{print $1}') || return
  ( sudo zpool online "$@" "$disk" ) || return
}

__zfs_get () {
  ( sudo zfs get -H -o value "$@" ) || return
}

__zfs_list_options () {
  ( echo -o "name,used,available,referenced,mountpoint,$1" "${@:2}" ) || return
}
